함수 
    코드를 재사용 가능한 블록을 생성하는데 사용하거나
        구조를 관리하게 쉽게 묶어놓은 묶음
코드 : 
    function 함수이름(매개변수) {
        실행될 문장
    }
    function greet(name) {
        console.log(`안녕${name}!`);
    }
작성해준 함수는 호출해서 사용(function Call)
    함수명(파라미터 안에 들어갈 값 작성);
    greet("KH 학생");

반환값(Return) : 어떤 계산이나 결과에 대한 값을 반환
    undefined : 반환값이 없을때는 undefined가 반환됨

    function 함수명(매개변수) {
        return 반환될 값;
    }
function add(a,b) {
    return a + b;

}

const result = add(5,3);    //결과로 8의 값이 저장됨
//(매개변수) => 표현할 식
//() => 표현식
매개변수가 하나인 경우에는 괄호() 생략이 가능
(매개변수) => {
            //여러 표현식이 존재
}
표현식이 여러개 일 경우 {} 사용해서 여러표현식을 묶어줘야함

1. 화살표를 사용하지 않을 때
    function add(a,b) {
        return a + b;
    }

2.화살표를 사용해서 나타낼 때
    const add = (a,b) => a + b;

3.매개변수가 하나일 경우
    const one = a => a * a;     //매개변수가 하나라 () 생략


'click', () => {
                buttonB.setArttribute('disabled', true);
                buttonA.removeAttribute('disabled');
}